在引擎开发中，通过名称或索引快速找到所对应的节点，资源，物体是最最基础的算法需求。如何更高效的满足引擎灵活的存储与查询需求，是任何一款引擎要考虑的问题，在诸多款开源或商业引擎中，都有过为了解决此类需求而专门设计的模版类或容器，它们通常被称为“词典”或“字典”。

 

       我们在Cocos2d-x中的很多地方也遇到过词典类CCDictionary。它是利用哈希表算法来进行CCObject管理的一个类。学习它可以让我们对于Cocos2d-x的内部管理机制有更清晰的认识。同时也可以学习这种思想，帮助我们在以后的项目开发中设计出更棒的管理器架构。

 

       CCDictionary中的元素是通过哈希表进行存储的，这个哈希表算法是放在uthash.h中的。其封装了大量的宏来进行相应的哈希表处理。

       通过HASK_MAK_TABLE宏来创建一个原始的哈希表。默认的存储空间为32。这个数值是由宏HASH_INITIAL_NUM_BUCKETS定义的。每次往里面插入元素时会判断存储空间是否足够，如果不足会扩展为原来的2倍大小的内存空间，并将原来的哈希表数据放入其中。

其中比较重要的一些宏:

HASH_MAKE_TABLE:建立一个哈希表。

HASH_ADD:将元素放入哈希表。

HASH_FIND:查找元素。

HASH_FIND_STR: 通过名称字符串查询哈希表中的相应词汇。

HASH_FIND_INT: 通过索引查询哈希表中的相应词汇。

HASH_DELETE：从哈希表中删除元素。 

HASH_EXPAND_BUCKETS: 扩展为原来的2倍大小的内存空间，并将原来的哈希表数据放入其中。